<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<script src="./echarts.js"></script>

<body>
    <div style='width:500px;height:500px;' id='test'></div>
    <div>
        <button id='bnt'>点我开始缩放</button>
        <button id='bnt2'>点我还原</button>
    </div>
</body>
<style>
    .box {
        position: absolute;
        z-index: 9999;
        left: 0;
        width: 0;
        top: 0;
        border: 1px solid #000;
    }
</style>

</html>
<script>
    window.onload = function () {
        var myCharts = echarts.init(document.getElementById('test'));
        myCharts.setOption({
            title: {
                text: '未来一周气温变化',
                subtext: '纯属虚构'
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                data: ['最高气温', '最低气温']
            },
            toolbox: {
                show: false,
                feature: {
                    dataZoom: {
                        yAxisIndex: 'none'
                    },
                    dataView: { readOnly: false },
                    magicType: { type: ['line', 'bar'] },
                    restore: {},
                    saveAsImage: {}
                }
            },
            xAxis: {
                type: 'category',
                boundaryGap: false,
                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']
            },
            yAxis: {
                type: 'value',
                axisLabel: {
                    formatter: '{value} °C'
                }
            },
            series: [
                {
                    name: '最高气温',
                    type: 'line',
                    data: [11, 11, 15, 13, 12, 13, 10],
                    markPoint: {
                        data: [
                            { type: 'max', name: '最大值' },
                            { type: 'min', name: '最小值' }
                        ]
                    },
                    markLine: {
                        data: [
                            { type: 'average', name: '平均值' }
                        ]
                    }
                },
                {
                    name: '最低气温',
                    type: 'line',
                    data: [1, -2, 2, 5, 3, 2, 0],
                    markPoint: {
                        data: [
                            { name: '周最低', value: -2, xAxis: 1, yAxis: -1.5 }
                        ]
                    },
                    markLine: {
                        data: [
                            { type: 'average', name: '平均值' },
                            [{
                                symbol: 'none',
                                x: '90%',
                                yAxis: 'max'
                            }, {
                                symbol: 'circle',
                                label: {
                                    normal: {
                                        position: 'start',
                                        formatter: '最大值'
                                    }
                                },
                                type: 'max',
                                name: '最高点'
                            }]
                        ]
                    }
                }
            ]
        }
        )
        //节流阀
        var flag;
        var flag2 = false;
        var start, end, startX, endX;
        var dom = document.getElementById('test').children[0];
        //调用区域选择
        const bnt = document.getElementById('bnt');
        bnt.onclick = function () {
            flag2 = true;

        }
        dom.onmousedown = function (e) {
            if (flag2) {

                flag = true;
                console.log(e.offsetX, e.offsetY)
                startX = e.offsetX;
                //此处的500是图表的宽度,具体数值应该根据自己的图表大小设定，最好直接获取DOM元素的width
                start = Math.ceil(e.offsetX / 500 * 100);
                const div = document.createElement('div');
                div.style.left = e.offsetX + 'px';
                div.style.top = e.offsetY + 'px';
                div.style.height = '200px';
                div.className = 'box';
                document.body.appendChild(div)
            }
        }
        dom.onmousemove = function (e) {
            e.stopPropagation()
            if (flag) {
                console.log(e.offsetX);
                const div = document.getElementsByClassName('box')[0];
                div.style.width = (e.offsetX - startX) + 'px';
            }
        }
        dom.onmouseup = function (e) {
            if (flag2) {
                flag = false;
                end = Math.ceil(e.offsetX / 500 * 100);
                // console.log()
                myCharts.dispatchAction({
                    type: 'dataZoom',
                    dataZoomIndex: 0,
                    start: start,
                    end: end,
                })
                const div = document.getElementsByClassName('box')[0];
                document.body.removeChild(div);
            }

        }

        //echartsDOM
        // 还原
        var bnt2 = document.getElementById('bnt2');
        bnt2.onclick = function () {
            flag2 = false;
            myCharts.dispatchAction({
                type: 'restore'
            })
        }
    }
</script>
